{"version":3,"sources":["../waterfall.js"],"names":["Waterfall","container","ordered","style","position","cont","colInfo","left","height","urls","boxs","nextInsertOrder","nextLoadOrder","imgSrc","addImg","window","onresize","e","elem","adjustPos","concat","url","aBox","document","createElement","visibility","className","pic","img","appendChild","push","setAttribute","toString","onload","waterfall","target","tryLoad","order","Number","getAttribute","console","log","testShouldLoad","parentNode","loadNext","waitTime","setTimeout","length","i","clientWidth","index","getTopPosIndex","top","offsetHeight"],"mappings":"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","file":"waterfall.js","sourcesContent":["\"use strict\";\n\nclass Waterfall{\n    constructor (container, ordered=false) {\n        container.style.position = \"relative\";\n        this.cont = container;\n        this.colInfo = {\n            left:[],\n            height:[]\n        };\n        this.urls = [];\n        this.boxs = [];\n        this.ordered = ordered;\n        this.nextInsertOrder = 0;\n        this.nextLoadOrder = 0;\n    }\n    create(){\n        for (let imgSrc of this.urls){\n            this.addImg(imgSrc);\n        }\n        window.onresize = (e)=>{\n            this.colInfo = {\n                left:[],\n                height:[]\n            };\n            for (let elem of this.boxs)\n            {\n                this.adjustPos(elem);\n            }\n        };\n    }\n    addUrls(urls){\n        this.urls = this.urls.concat(urls);\n    }\n    addImg(url){\n        let aBox = document.createElement(\"div\");\n        aBox.style.visibility = \"hidden\";\n        aBox.className = \"waterfall-box\";\n        let pic = document.createElement(\"div\");\n        pic.className = \"waterfall-pic\";\n        let img = document.createElement(\"img\");\n        img.className = \"waterfall-img\";\n        pic.appendChild(img)\n        aBox.appendChild(pic);\n        this.cont.appendChild(aBox);\n        this.boxs.push(aBox);\n        img.setAttribute(\"src\", url);\n        img.setAttribute(\"data-order\",  this.nextInsertOrder.toString());\n        this.nextInsertOrder++;\n        img.onload = (e)=>{\n            let waterfall = this;\n            let img = e.target;\n            function tryLoad(){\n                let order = Number(img.getAttribute(\"data-order\"));\n                console.log(\"Try loading\" + order);\n                if (waterfall.testShouldLoad(img))\n                {\n                    let elem = img.parentNode.parentNode;\n                    waterfall.adjustPos(elem, waterfall.colInfo);\n                    elem.style.visibility = \"visible\";\n                    console.log(\"Loading img\" + order);\n                    waterfall.loadNext();\n                }else{\n                    let waitTime = (order - waterfall.nextLoadOrder)* 25;\n                    console.log(\"Wait for retry loading\" + order + \" after\" + waitTime);\n                    setTimeout(tryLoad, waitTime);\n                }\n            }\n            tryLoad();\n        };\n    }\n    testShouldLoad(img){\n        if (!this.ordered)\n            return true;\n        let order = Number(img.getAttribute(\"data-order\"));\n        return this.nextLoadOrder === order;\n    }\n    loadNext(){\n        this.nextLoadOrder++;\n    }\n\n    getTopPosIndex(){\n        if (this.colInfo.height.length < 4)\n        {\n            let i = this.colInfo.height.length;\n            this.colInfo.left[i] = (this.cont.clientWidth*0.25)*i;\n            this.colInfo.height[i] = 0;\n            return i;\n        }\n\n        // find the min height and related left\n        let height = this.colInfo.height[0];\n        let index = 0;\n        for (let i=1;i <this.colInfo.height.length;i++)\n        {\n            if (this.colInfo.height[i]<height)\n            {\n                index = i;\n            }\n        }\n        return index;\n    }\n    adjustPos(elem){\n        let i = this.getTopPosIndex(this.colInfo);\n        elem.style.position = \"absolute\";\n        elem.style.top = this.colInfo.height[i] + \"px\";\n        elem.style.left = this.colInfo.left[i]  + \"px\";\n        this.colInfo.height[i] += elem.offsetHeight;\n        return {top: elem.style.top, left: elem.style.left};\n    }\n}"]}